#!/bin/bash -l

# NOTE: lines starting with "#$" are parameters for the HPC batcher.
# otherwise, syntax is regular Bash shell script.

# maximum time limit
# Too big and you wait in line longer.
# Too small and job stops before completion.
#$ -l h_rt=01:00:00

# MPI node(s) request
# adjust this per your simulation for multiple nodes, node size, etc.
# see HPC batch docs for your system
# smp 8 is single node, 8 CPU cores
#$ -pe smp 8

# batcher tells how many CPUs were assigned
echo "NSLOTS = $NSLOTS"

# stop on any Bash script error
set -e
# check all Bash script variables are assigned before use
set -o nounset

# arbitrary directory to install Gemini3D libraries in
prefix=$HOME/libgem_gnu

# arbitrary location to put code under
rdir=$HOME/code

# arbitrary temporary directory to build under
tdir=$(mktemp -d)

# attempt to get script directory
# https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
sdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# 1. load modules for compiler, python, cmake etc.
source ${sdir}/gcc.sh

# 2. build gemini3d/external libraries
gesrc=${rdir}/gemext
gebin=${tdir}/build-gemext
gebr=main
geurl=https://github.com/gemini3d/external
if [[ -d ${gesrc} ]]; then
  git -C ${gesrc} checkout ${gebr}
  git -C ${gesrc} pull
else
  git -C ${rdir} clone ${geurl} ${gesrc}
fi
cmake -S ${gesrc} -B ${gebin} -Dbuild_mpi=on --install-prefix=${prefix}
cmake --build ${gebin} --parallel

# 3. build Gemini3d
gmsrc=${rdir}/gemini3d
gmbin=${tdir}/build-gemini3d
gmbr=FBI_branch
gmurl=https://github.com/gemini3d/gemini3d
if [[ -d ${gmsrc} ]]; then
  git -C ${gmsrc} checkout ${gmbr}
  git -C ${gmsrc} pull
else
  git -C ${rdir} clone ${gmurl} ${gmsrc}
  git -C ${gmsrc} checkout ${gmbr}
fi
cmake -S ${gmsrc} -B ${gmbin} -DCMAKE_PREFIX_PATH=${prefix}
cmake --build ${gmbin} --parallel

# 4. get simulation examples (or use your own)
exsrc=${rdir}/gemci
exbr=main
exurl=https://github.com/gemini3d/gemci
if [[ -d ${exsrc} ]]; then
  git -C ${exsrc} checkout ${exbr}
  git -C ${exsrc} pull
else
  git -C ${rdir} clone ${exurl} ${exsrc}
fi

# 5. setup PyGemini
pysrc=${rdir}/pygemini
pybr=main
pyurl=https://github.com/gemini3d/pygemini
if [[ -d ${pysrc} ]]; then
  git -C ${pysrc} checkout ${pybr}
  git -C ${pysrc} pull
else
  git -C ${rdir} clone ${pyurl} ${pysrc}
fi
python -m pip install -e ${pysrc}

# 6. run Gemini3D simulation using PyGemini
# simdir is where simulation output HDF5 files will be written as simulation runs
infile=${exsrc}/cfg/hourly/mini3d_fang/config.nml
simroot=$HOME/gemini3d_sims
simdir=${simroot}/mini3d_fang
mkdir -p ${simdir}
cp ${infile} ${simdir}/inputs/
python -m gemini3d.run ${simdir} -gemexe ${gmbin}/gemini.bin
